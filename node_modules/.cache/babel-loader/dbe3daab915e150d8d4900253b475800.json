{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"J:\\\\React\\\\youtube-react-clone-master\\\\src\\\\components\\\\VideoSidebar\\\\VideoSidebar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { VideoContext } from \"../../VideoContext\";\nimport { Link } from \"react-router-dom\";\nimport VideoResult from \"./../VideoResult/VideoResult\";\nimport \"./VideoSidebar.css\";\n\nconst moment = require(\"moment\");\n\nrequire(\"moment-duration-format\");\n\nconst VideoSidebar = () => {\n  _s();\n\n  const [apiVideos, setApiVideos] = useContext(VideoContext);\n\n  const numberWithCommas = num => {\n    if (num != undefined) {\n      return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoSidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recommended\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), apiVideos.slice(0, 20).map(videos => /*#__PURE__*/_jsxDEV(Link, {\n      to: `/video/${videos.snippet.channelId}/${videos.id}`,\n      children: /*#__PURE__*/_jsxDEV(VideoResult, {\n        videoId: videos.id,\n        title: videos.snippet.title,\n        thumbnail: videos.snippet.thumbnails.high.url,\n        author: videos.snippet.channelTitle,\n        views: numberWithCommas(videos.statistics.viewCount),\n        timestamp: moment(videos.snippet.publishedAt).fromNow(),\n        duration: moment.duration(videos.contentDetails.duration).format(\"hh:mm:ss\"),\n        live: videos.snippet.liveBroadcastContent\n      }, videos.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoSidebar, \"wZE7p/FdWLYiVM4oKjjvUiwssOc=\");\n\n_c = VideoSidebar;\nexport default VideoSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoSidebar\");","map":{"version":3,"sources":["J:/React/youtube-react-clone-master/src/components/VideoSidebar/VideoSidebar.jsx"],"names":["React","useContext","VideoContext","Link","VideoResult","moment","require","VideoSidebar","apiVideos","setApiVideos","numberWithCommas","num","undefined","toString","replace","slice","map","videos","snippet","channelId","id","title","thumbnails","high","url","channelTitle","statistics","viewCount","publishedAt","fromNow","duration","contentDetails","format","liveBroadcastContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAO,oBAAP;;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACAA,OAAO,CAAC,wBAAD,CAAP;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,UAAU,CAACC,YAAD,CAA5C;;AACA,QAAMQ,gBAAgB,GAAIC,GAAD,IAAS;AAChC,QAAIA,GAAG,IAAIC,SAAX,EAAsB;AACpB,aAAOD,GAAG,CAACE,QAAJ,GAAeC,OAAf,CAAuB,uBAAvB,EAAgD,GAAhD,CAAP;AACD;AACF,GAJD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,SAAS,CAACO,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,EAAuBC,GAAvB,CAA4BC,MAAD,iBAC1B,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASA,MAAM,CAACC,OAAP,CAAeC,SAAU,IAAGF,MAAM,CAACG,EAAG,EAA1D;AAAA,6BACE,QAAC,WAAD;AAEE,QAAA,OAAO,EAAEH,MAAM,CAACG,EAFlB;AAGE,QAAA,KAAK,EAAEH,MAAM,CAACC,OAAP,CAAeG,KAHxB;AAIE,QAAA,SAAS,EAAEJ,MAAM,CAACC,OAAP,CAAeI,UAAf,CAA0BC,IAA1B,CAA+BC,GAJ5C;AAKE,QAAA,MAAM,EAAEP,MAAM,CAACC,OAAP,CAAeO,YALzB;AAME,QAAA,KAAK,EAAEf,gBAAgB,CAACO,MAAM,CAACS,UAAP,CAAkBC,SAAnB,CANzB;AAOE,QAAA,SAAS,EAAEtB,MAAM,CAACY,MAAM,CAACC,OAAP,CAAeU,WAAhB,CAAN,CAAmCC,OAAnC,EAPb;AAQE,QAAA,QAAQ,EAAExB,MAAM,CACbyB,QADO,CACEb,MAAM,CAACc,cAAP,CAAsBD,QADxB,EAEPE,MAFO,CAEA,UAFA,CARZ;AAWE,QAAA,IAAI,EAAEf,MAAM,CAACC,OAAP,CAAee;AAXvB,SACOhB,MAAM,CAACG,EADd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA7BD;;GAAMb,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { VideoContext } from \"../../VideoContext\";\nimport { Link } from \"react-router-dom\";\nimport VideoResult from \"./../VideoResult/VideoResult\";\nimport \"./VideoSidebar.css\";\n\nconst moment = require(\"moment\");\nrequire(\"moment-duration-format\");\n\nconst VideoSidebar = () => {\n  const [apiVideos, setApiVideos] = useContext(VideoContext);\n  const numberWithCommas = (num) => {\n    if (num != undefined) {\n      return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    }\n  };\n  return (\n    <div className=\"videoSidebar\">\n      <h3>Recommended</h3>\n      {apiVideos.slice(0, 20).map((videos) => (\n        <Link to={`/video/${videos.snippet.channelId}/${videos.id}`}>\n          <VideoResult\n            key={videos.id}\n            videoId={videos.id}\n            title={videos.snippet.title}\n            thumbnail={videos.snippet.thumbnails.high.url}\n            author={videos.snippet.channelTitle}\n            views={numberWithCommas(videos.statistics.viewCount)}\n            timestamp={moment(videos.snippet.publishedAt).fromNow()}\n            duration={moment\n              .duration(videos.contentDetails.duration)\n              .format(\"hh:mm:ss\")}\n            live={videos.snippet.liveBroadcastContent}\n          />\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default VideoSidebar;\n"]},"metadata":{},"sourceType":"module"}