{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"J:\\\\React\\\\youtube-react-clone-master\\\\src\\\\components\\\\SingleVideo\\\\SingleVideo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport VideoPlayer from \"./../VideoPlayer/VideoPlayer\";\nimport VideoSidebar from \"./../VideoSidebar/VideoSidebar\";\nimport VideoComment from \"../VideoComment/VideoComment\";\nimport VideoDescription from \"./../VideoDescription/VideoDescription\";\nimport VideoInfo from \"./../VideoInfo/VideoInfo\";\nimport { withRouter } from \"react-router-dom\";\nimport { key } from \"./../../Utilities\";\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport \"./SingleVideo.css\";\n\nconst SingleVideo = props => {\n  _s();\n\n  const [singleVideo, setSingleVideo] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [expandComments, setExpandComments] = useState(\"closed\");\n\n  const toggleComments = () => {\n    expandComments == \"closed\" ? setExpandComments(\"open\") : setExpandComments(\"closed\");\n  };\n\n  const expandedBlock = {\n    height: \"auto\"\n  };\n  const videoId = props.match.params.videoId;\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    axios.get(`https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2C%20statistics&id=${videoId}&key=${key}`).then(response => {\n      const {\n        data\n      } = response;\n      const singleVideoResults = data[\"items\"];\n      setSingleVideo(singleVideoResults);\n    });\n  }, [videoId]);\n  useEffect(() => {\n    axios.get(`https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet%2Creplies&videoId=${videoId}&key=${key}`).then(response => {\n      const {\n        data\n      } = response;\n      const commentsResults = data[\"items\"];\n      setComments(commentsResults);\n    });\n  }, [videoId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singleVideo\",\n      children: [/*#__PURE__*/_jsxDEV(VideoPlayer, {\n        video: videoId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), singleVideo.map(singleVideoResponse => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(VideoInfo, {\n          title: singleVideoResponse.snippet.title,\n          views: singleVideoResponse.statistics.viewCount,\n          date: singleVideoResponse.snippet.publishedAt,\n          likes: singleVideoResponse.statistics.likeCount,\n          dislikes: singleVideoResponse.statistics.dislikeCount,\n          tags: singleVideoResponse.snippet.tags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VideoDescription, {\n          description: singleVideoResponse.snippet.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singleVideo__comments\",\n        onClick: () => toggleComments(),\n        style: expandComments != \"closed\" ? expandedBlock : null,\n        children: [/*#__PURE__*/_jsxDEV(UnfoldMoreIcon, {\n          className: \"singleVideo_expandComments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singleVideo__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(VideoComment, {\n              avatar: comment.snippet.topLevelComment.snippet.authorProfileImageUrl,\n              author: comment.snippet.topLevelComment.snippet.authorDisplayName,\n              date: comment.snippet.topLevelComment.snippet.publishedAt,\n              text: comment.snippet.topLevelComment.snippet.textOriginal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SingleVideo, \"WHo9SxXzqYfby1vNwiyustPON38=\");\n\n_c = SingleVideo;\nexport default _c2 = withRouter(SingleVideo);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleVideo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["J:/React/youtube-react-clone-master/src/components/SingleVideo/SingleVideo.jsx"],"names":["React","useState","useEffect","axios","VideoPlayer","VideoSidebar","VideoComment","VideoDescription","VideoInfo","withRouter","key","UnfoldMoreIcon","SingleVideo","props","singleVideo","setSingleVideo","comments","setComments","expandComments","setExpandComments","toggleComments","expandedBlock","height","videoId","match","params","window","scrollTo","get","then","response","data","singleVideoResults","commentsResults","map","singleVideoResponse","snippet","title","statistics","viewCount","publishedAt","likeCount","dislikeCount","tags","description","comment","topLevelComment","authorProfileImageUrl","authorDisplayName","textOriginal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport VideoPlayer from \"./../VideoPlayer/VideoPlayer\";\nimport VideoSidebar from \"./../VideoSidebar/VideoSidebar\";\nimport VideoComment from \"../VideoComment/VideoComment\";\nimport VideoDescription from \"./../VideoDescription/VideoDescription\";\nimport VideoInfo from \"./../VideoInfo/VideoInfo\";\nimport { withRouter } from \"react-router-dom\";\nimport { key } from \"./../../Utilities\";\nimport UnfoldMoreIcon from \"@material-ui/icons/UnfoldMore\";\nimport \"./SingleVideo.css\";\n\nconst SingleVideo = (props) => {\n  const [singleVideo, setSingleVideo] = useState([]);\n  const [comments, setComments] = useState([]);\n\n  const [expandComments, setExpandComments] = useState(\"closed\");\n\n  const toggleComments = () => {\n    expandComments == \"closed\"\n      ? setExpandComments(\"open\")\n      : setExpandComments(\"closed\");\n  };\n\n  const expandedBlock = {\n    height: \"auto\",\n  };\n  const videoId = props.match.params.videoId;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    axios\n      .get(\n        `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2C%20statistics&id=${videoId}&key=${key}`\n      )\n      .then((response) => {\n        const { data } = response;\n        const singleVideoResults = data[\"items\"];\n        setSingleVideo(singleVideoResults);\n      });\n  }, [videoId]);\n  useEffect(() => {\n    axios\n      .get(\n        `https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet%2Creplies&videoId=${videoId}&key=${key}`\n      )\n      .then((response) => {\n        const { data } = response;\n        const commentsResults = data[\"items\"];\n        setComments(commentsResults);\n      });\n  }, [videoId]);\n\n  return (\n    <>\n      <div className=\"singleVideo\">\n        <VideoPlayer video={videoId} />\n        {singleVideo.map((singleVideoResponse) => (\n          <>\n            <VideoInfo\n              title={singleVideoResponse.snippet.title}\n              views={singleVideoResponse.statistics.viewCount}\n              date={singleVideoResponse.snippet.publishedAt}\n              likes={singleVideoResponse.statistics.likeCount}\n              dislikes={singleVideoResponse.statistics.dislikeCount}\n              tags={singleVideoResponse.snippet.tags}\n            />\n            <hr />\n            <VideoDescription\n              description={singleVideoResponse.snippet.description}\n            />\n          </>\n        ))}\n        <hr />\n        <div\n          className=\"singleVideo__comments\"\n          onClick={() => toggleComments()}\n          style={expandComments != \"closed\" ? expandedBlock : null}\n        >\n          <UnfoldMoreIcon className=\"singleVideo_expandComments\" />\n          <div className=\"singleVideo__container\">\n            <h3>Comments</h3>\n            {comments.map((comment) => (\n              <>\n                <VideoComment\n                  avatar={\n                    comment.snippet.topLevelComment.snippet\n                      .authorProfileImageUrl\n                  }\n                  author={\n                    comment.snippet.topLevelComment.snippet.authorDisplayName\n                  }\n                  date={comment.snippet.topLevelComment.snippet.publishedAt}\n                  text={comment.snippet.topLevelComment.snippet.textOriginal}\n                />\n              </>\n            ))}\n          </div>\n        </div>\n      </div>\n      <VideoSidebar />\n    </>\n  );\n};\nexport default withRouter(SingleVideo);\n"]},"metadata":{},"sourceType":"module"}