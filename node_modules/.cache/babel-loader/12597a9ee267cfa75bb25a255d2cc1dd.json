{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"J:\\\\React\\\\youtube-react-clone-master\\\\src\\\\components\\\\VideoDescription\\\\VideoDescription.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { key, numberWithCommas } from \"./../../Utilities\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport Button from \"@material-ui/core/Button\";\nimport { withRouter } from \"react-router-dom\";\n\nconst VideoDescription = props => {\n  _s();\n\n  const [expandDescription, setExpandDescription] = useState(\"closed\");\n  const [channel, setChannel] = useState([]);\n\n  const toggleDescription = () => {\n    expandDescription == \"closed\" ? setExpandDescription(\"open\") : setExpandDescription(\"closed\");\n  };\n\n  const expandedBlock = {\n    height: \"auto\",\n    overflow: \"auto\"\n  };\n  const channelId = props.match.params.channelId;\n  useEffect(() => {\n    axios.get(`https://youtube.googleapis.com/youtube/v3/channels?part=snippet%2C%20statistics&id=${channelId}&key=${key}`).then(response => {\n      const {\n        data\n      } = response;\n      const channelResults = data[\"items\"];\n      setChannel(channelResults);\n    });\n  }, [channelId]);\n  console.log(channel);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singleVideo__description\",\n    style: expandDescription != \"closed\" ? expandedBlock : null,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singleVideo__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singleVideo__descriptionHead\",\n        children: channel.map(channelData => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"singleVideo__channel\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              src: channelData.snippet.thumbnails.default.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"singleVideo__channelText\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"singleVideo__author\",\n                children: channelData.snippet.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"singleVideo__subscribers\",\n                children: [numberWithCommas(channelData.statistics.subscriberCount), \" \", \"subscribers\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"singleVideo__subscribeBlock\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"singleVideo__subscribeButton\",\n              variant: \"contained\",\n              disableElevation: true,\n              children: \"Subscribe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singleVideo__descriptionBody\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => toggleDescription(),\n      className: \"singleVideo__showDescription\",\n      children: expandDescription != \"closed\" ? \"Show less\" : \"Show more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoDescription, \"Lg3hv2ZMaOlA+Y1w3vjVpG6b7w4=\");\n\n_c = VideoDescription;\nexport default _c2 = withRouter(VideoDescription);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"VideoDescription\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["J:/React/youtube-react-clone-master/src/components/VideoDescription/VideoDescription.jsx"],"names":["React","useState","useEffect","axios","key","numberWithCommas","Avatar","NotificationsIcon","Button","withRouter","VideoDescription","props","expandDescription","setExpandDescription","channel","setChannel","toggleDescription","expandedBlock","height","overflow","channelId","match","params","get","then","response","data","channelResults","console","log","map","channelData","snippet","thumbnails","default","url","title","statistics","subscriberCount","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { key, numberWithCommas } from \"./../../Utilities\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport Button from \"@material-ui/core/Button\";\nimport { withRouter } from \"react-router-dom\";\n\nconst VideoDescription = (props) => {\n  const [expandDescription, setExpandDescription] = useState(\"closed\");\n  const [channel, setChannel] = useState([]);\n  const toggleDescription = () => {\n    expandDescription == \"closed\"\n      ? setExpandDescription(\"open\")\n      : setExpandDescription(\"closed\");\n  };\n  const expandedBlock = {\n    height: \"auto\",\n    overflow: \"auto\",\n  };\n  const channelId = props.match.params.channelId;\n  useEffect(() => {\n    axios\n      .get(\n        `https://youtube.googleapis.com/youtube/v3/channels?part=snippet%2C%20statistics&id=${channelId}&key=${key}`\n      )\n      .then((response) => {\n        const { data } = response;\n        const channelResults = data[\"items\"];\n        setChannel(channelResults);\n      });\n  }, [channelId]);\n  console.log(channel);\n  return (\n    <div\n      className=\"singleVideo__description\"\n      style={expandDescription != \"closed\" ? expandedBlock : null}\n    >\n      <div className=\"singleVideo__container\">\n        <div className=\"singleVideo__descriptionHead\">\n          {channel.map((channelData) => (\n            <>\n              <div className=\"singleVideo__channel\">\n                <Avatar src={channelData.snippet.thumbnails.default.url} />\n                <div className=\"singleVideo__channelText\">\n                  <span className=\"singleVideo__author\">\n                    {channelData.snippet.title}\n                  </span>\n                  <span className=\"singleVideo__subscribers\">\n                    {numberWithCommas(channelData.statistics.subscriberCount)}{\" \"}\n                    subscribers\n                  </span>\n                </div>\n              </div>\n              <div className=\"singleVideo__subscribeBlock\">\n                <Button\n                  className=\"singleVideo__subscribeButton\"\n                  variant=\"contained\"\n                  disableElevation\n                >\n                  Subscribe\n                </Button>\n                <Button startIcon={<NotificationsIcon />} />\n              </div>\n            </>\n          ))}\n        </div>\n        <div className=\"singleVideo__descriptionBody\">\n          <p>{props.description}</p>\n        </div>\n      </div>\n      <Button\n        onClick={() => toggleDescription()}\n        className=\"singleVideo__showDescription\"\n      >\n        {expandDescription != \"closed\" ? \"Show less\" : \"Show more\"}\n      </Button>\n    </div>\n  );\n};\n\nexport default withRouter(VideoDescription);\n"]},"metadata":{},"sourceType":"module"}