{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"J:\\\\React\\\\youtube-react-clone-master\\\\src\\\\components\\\\SearchPage\\\\SearchPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport VideoResult from \"./../VideoResult/VideoResult\";\nimport { key } from \"./../../Utilities\";\nimport \"./SearchPage.css\";\n\nconst SearchPage = props => {\n  _s();\n\n  const [resultVideos, setResultVideos] = useState([]);\n  const query = props.match.params.searchterm;\n  useEffect(() => {\n    axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&order=relevance&q=${query}&safeSearch=moderate&type=video&videoDefinition=any&videoDimension=any&videoDuration=any&key=${key}`).then(response => {\n      const {\n        data\n      } = response;\n      const searchResults = data[\"items\"];\n      setResultVideos(searchResults);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchpage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchpage__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchpage__filter\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(TuneIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 30\n          }, this),\n          children: \"Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"searchpage__separator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultsGallery\",\n        children: resultVideos.map(resultVideo => {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: `/video/${resultVideo.snippet.channelId}/${resultVideo.id.videoId}`,\n            children: /*#__PURE__*/_jsxDEV(VideoResult, {\n              videoId: resultVideo.id.videoId,\n              title: resultVideo.snippet.title,\n              description: resultVideo.snippet.description,\n              author: resultVideo.snippet.channelTitle,\n              thumbnail: resultVideo.snippet.thumbnails.medium.url,\n              live: resultVideo.snippet.liveBroadcastContent\n            }, resultVideo.id.videoId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchPage, \"PzdXdGz4x1ZxpRW93c8zRYrgGDw=\");\n\n_c = SearchPage;\nexport default _c2 = withRouter(SearchPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["J:/React/youtube-react-clone-master/src/components/SearchPage/SearchPage.jsx"],"names":["React","useState","useEffect","axios","Link","withRouter","Button","TuneIcon","VideoResult","key","SearchPage","props","resultVideos","setResultVideos","query","match","params","searchterm","get","then","response","data","searchResults","map","resultVideo","snippet","channelId","id","videoId","title","description","channelTitle","thumbnails","medium","url","liveBroadcastContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMa,KAAK,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,UAAjC;AACAf,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFe,GADH,CAEK,iGAAgGJ,KAAM,gGAA+FL,GAAI,EAF9M,EAIGU,IAJH,CAISC,QAAD,IAAc;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;AACA,YAAME,aAAa,GAAGD,IAAI,CAAC,OAAD,CAA1B;AACAR,MAAAA,eAAe,CAACS,aAAD,CAAf;AACD,KARH;AASD,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,SAAS,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACGV,YAAY,CAACW,GAAb,CAAkBC,WAAD,IAAiB;AACjC,8BACE,QAAC,IAAD;AACE,YAAA,EAAE,EAAG,UAASA,WAAW,CAACC,OAAZ,CAAoBC,SAAU,IAAGF,WAAW,CAACG,EAAZ,CAAeC,OAAQ,EADxE;AAAA,mCAGE,QAAC,WAAD;AAEE,cAAA,OAAO,EAAEJ,WAAW,CAACG,EAAZ,CAAeC,OAF1B;AAGE,cAAA,KAAK,EAAEJ,WAAW,CAACC,OAAZ,CAAoBI,KAH7B;AAIE,cAAA,WAAW,EAAEL,WAAW,CAACC,OAAZ,CAAoBK,WAJnC;AAKE,cAAA,MAAM,EAAEN,WAAW,CAACC,OAAZ,CAAoBM,YAL9B;AAME,cAAA,SAAS,EAAEP,WAAW,CAACC,OAAZ,CAAoBO,UAApB,CAA+BC,MAA/B,CAAsCC,GANnD;AAOE,cAAA,IAAI,EAAEV,WAAW,CAACC,OAAZ,CAAoBU;AAP5B,eACOX,WAAW,CAACG,EAAZ,CAAeC,OADtB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBADF;AAeD,SAhBA;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA3CD;;GAAMlB,U;;KAAAA,U;AA6CN,qBAAeL,UAAU,CAACK,UAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { Link, withRouter } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport VideoResult from \"./../VideoResult/VideoResult\";\nimport { key } from \"./../../Utilities\";\nimport \"./SearchPage.css\";\n\nconst SearchPage = (props) => {\n  const [resultVideos, setResultVideos] = useState([]);\n  const query = props.match.params.searchterm;\n  useEffect(() => {\n    axios\n      .get(\n        `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&order=relevance&q=${query}&safeSearch=moderate&type=video&videoDefinition=any&videoDimension=any&videoDuration=any&key=${key}`\n      )\n      .then((response) => {\n        const { data } = response;\n        const searchResults = data[\"items\"];\n        setResultVideos(searchResults);\n      });\n  }, []);\n  return (\n    <div className=\"searchpage\">\n      <div className=\"searchpage__wrapper\">\n        <div className=\"searchpage__filter\">\n          <Button startIcon={<TuneIcon />}>Filter</Button>\n        </div>\n        <hr className=\"searchpage__separator\" />\n        <div className=\"resultsGallery\">\n          {resultVideos.map((resultVideo) => {\n            return (\n              <Link\n                to={`/video/${resultVideo.snippet.channelId}/${resultVideo.id.videoId}`}\n              >\n                <VideoResult\n                  key={resultVideo.id.videoId}\n                  videoId={resultVideo.id.videoId}\n                  title={resultVideo.snippet.title}\n                  description={resultVideo.snippet.description}\n                  author={resultVideo.snippet.channelTitle}\n                  thumbnail={resultVideo.snippet.thumbnails.medium.url}\n                  live={resultVideo.snippet.liveBroadcastContent}\n                />\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(SearchPage);\n"]},"metadata":{},"sourceType":"module"}